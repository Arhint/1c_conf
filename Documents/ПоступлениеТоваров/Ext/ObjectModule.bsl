Функция ПолучитьДанные()
	
	Запрос = новый Запрос;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПоступлениеТоваровТовары.Номенклатура КАК Номенклатура,
	               |	ПоступлениеТоваровТовары.Цена КАК Цена,
	               |	ПоступлениеТоваровТовары.Количество КАК Количество,
	               |	ПоступлениеТоваровТовары.Сумма КАК Сумма,
	               |	ПоступлениеТоваровТовары.Ссылка.Дата КАК Период,
	               |	ПоступлениеТоваровТовары.Ссылка.Контрагент КАК Контрагент,
	               |	ПоступлениеТоваровТовары.Ссылка.Склад КАК Склад,
	               |	ЕСТЬNULL(ЗакупочныеЦеныСрезПоследних.Цена, 0) КАК ПоследняяЦена,
	               |	&ВидДвижения КАК ВидДвижения,
	               |	ПоступлениеТоваровТовары.Ссылка.СуммаДокумента КАК СуммаДокумента,
	               |	ПоступлениеТоваровТовары.Ссылка КАК Партия
	               |ИЗ
	               |	Документ.ПоступлениеТоваров.Товары КАК ПоступлениеТоваровТовары
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗакупочныеЦены.СрезПоследних(&Дата, ) КАК ЗакупочныеЦеныСрезПоследних
	               |		ПО ПоступлениеТоваровТовары.Номенклатура = ЗакупочныеЦеныСрезПоследних.Номенклатура
	               |			И ПоступлениеТоваровТовары.Ссылка.Контрагент = ЗакупочныеЦеныСрезПоследних.Контрагент
	               |ГДЕ
	               |	ПоступлениеТоваровТовары.Ссылка = &ссылка";
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	Запрос.УстановитьПараметр("Дата",Дата);
	Запрос.УстановитьПараметр("ВидДвижения",ВидДвиженияНакопления.Приход);
	ТЗ = Запрос.Выполнить().Выгрузить();
	
	Возврат ТЗ;
	
КонецФункции

Функция ПроверитьДанные(ТаблицаДанных)
	
	Можно = истина;
	
	Для каждого стр из ТаблицаДанных цикл
		
		Если стр.Цена > стр.ПоследняяЦена тогда
			
			Сообщить("Закупочная цена изменилась. Контрагент:"+стр.Контрагент+". Номенклатура:"+стр.Номенклатура+". Последняя цена:"+стр.ПоследняяЦена+". Текущая цена:"+стр.Цена+".");
			
			//Можно = Ложь;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Можно;
	
КонецФункции




Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	Если Товары.Количество()=0 тогда
		Сообщить("Отсутствуют элементы в табличной части "+"Товары");
		Отказ = истина; Возврат;
		
	КонецЕсли;
	
	ТаблицаДляПроведения = ПолучитьДанные();
	                                                                                                          
	МожноПроводить = ПроверитьДанные(ТаблицаДляПроведения);
	
	Если не МожноПроводить тогда
		Отказ = истина;
		Возврат;
	Конецесли;
	
	ТаблицаДляЗакупочныхЦен = ТаблицаДляПроведения.Скопировать(,"Период, Контрагент, Номенклатура, Цена");
	ТаблицаДляЗакупок = ТаблицаДляПроведения.Скопировать(,"Период, Контрагент, Номенклатура, Количество, Сумма");
	ТаблицаДляТоваровНаСкладах = ТаблицаДляПроведения.Скопировать(,"ВидДвижения, Период, Склад, Номенклатура, Количество");
	Массив = Новый Массив;
	Массив.Добавить(ТаблицаДляПроведения[0]);
	ТаблицаДляВзаиморасчетов = ТаблицаДляПроведения.Скопировать(Массив,"ВидДвижения, Период, Контрагент, СуммаДокумента");
	ТаблицаДляВзаиморасчетов.Колонки.СуммаДокумента.Имя="Сумма";
	ТаблицаДляПартий = ТаблицаДляПроведения.Скопировать(,"ВидДвижения, Период, Номенклатура, Склад, Партия, Количество, Сумма");
	
	
	Движения.ЗакупочныеЦены.Записывать = Истина;
	Движения.Закупки.Записывать = Истина;
	Движения.ТоварыНаСкладе.Записывать = Истина;
	Движения.Взаиморасчеты.Записывать = Истина;
	Движения.ПартииТоваров.Записывать = Истина;
	
	Движения.ЗакупочныеЦены.Загрузить(ТаблицаДляЗакупочныхЦен);
	Движения.Закупки.Загрузить(ТаблицаДляЗакупок);
	Движения.ТоварыНаСкладе.Загрузить(ТаблицаДляТоваровНаСкладах);
	Движения.Взаиморасчеты.Загрузить(ТаблицаДляВзаиморасчетов);
	Движения.ПартииТоваров.Загрузить(ТаблицаДляПартий);
	
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	Сообщить("Проведение удалено");
КонецПроцедуры
